<<<<<<< HEAD
---
layout: post
title: "운영체제"
date:   2022-03-28 14:49:24 +0900
categories: 운영체제
---

# LECTURE 1
# 컴퓨터 시스템 개요

## 컴퓨터 하드웨어
1. 프로세서
    - CPU
    - 그래픽카드(GPU) 등
2. 메모리
    - 주기억장치
    - 보조기억장치
3. 주변장치
    - 키보드/마우스
    - 모니터/프린터
    - 네트워크 모뎀 등
## 프로세서
- ### 컴퓨터의 두뇌
    - 연산 수행
    - 컴퓨터의 모든 장치의 동작 제어
> ### 프로세서
> (레지스터 <-> Processing Unit)<-Control Unit
## 레지스터
- ### 프로세서 내부에 있는 메모리
    - 프로세서가 사용할 데이터 저장
    - 컴퓨터에서 가장 빠른 메모리
- ### 레지스터의 종류
    - 용도에 따른 분류
        - 전용 레지스터, 범용 레지스터
    - 사용자가 정보 변경 가능 여부에 따른 분류
        - 사용자 가시 레지스터, 사용자 불가시 레지스터
    - 저장하는 정보의 종류에 따른 분류
        - 데이터 레지스터, 주소 레지스터, 상태 레지스터
  
#### 표 1-1 사용자 가시 레지스터
종류  | 설명 
---------|----------
 데이터 레지스터(DR) | 함수 연산에 필요한 데이터를 저장한다. 값, 문자 등을 저장하므로 산술 연산이나 논리 연산에 사용하며, 연산 결과로 플래그 값을 저장한다. 
 주소 레지스터(AR) | 주소나 유효 주소를 계산하는 데에 필요한 주소 일부분을 저장한다. 주소 레지스터에 저장한 값(값 데이터)을 사용하여 산술 연산을 할 수 있다.<br>cf) 기준 주소 레지스터, 인덱스 레지스터, 스택 포인터 레지스터
 #### 표 1-2 사용자 불가시 레지스터

종류 | 설명 
---------|----------
 프로그램 카운터(PC) | 다음에 실행할 명령어의 주소를 보관하는 레지스터이다. 계수기로 되어 있어 실행할 명령어를 메모리에서 읽으면 명령어의 길이만큼 증가하여 다음 명령어를 가리키며, 분기 명령어는 목적 주소로 갱신할 수 있다
 명령어 레지스터 | 현재 실행하는 명령어를 보관하는 레지스터이다 
 누산기(ACC) | 데이터를 일시적으로 저장하는 레지스터이다
 메모리 주소 레지스터(MAR) | 프로세서가 참조하려는 데이터의 주소를 명시하여 메모리에 접근하는 버퍼 레지스터이다
 메모리 버퍼 레지스터 | 프로세서가 메모리에서 읽거나 메모리에서 저장할 데이터 자체를 보관하는 버퍼 레지스터이다. 메모리 데이터 레지스터(MDR)이라고도 한다.
 ## 프로세서의 동작
 ![Null!](./프로세스의동작.png)
## 운영체제와 프로세서
- ### 프로세서에게 처리할 작업 할당 및 관리
  - 프로세스(process) 생성 및 관리
- ### 프로그램의 프로세서 사용 제어
  - 프로그램의 프로세서 사용 시간 관리
  - 복수 프로그램간 사용 시간 조율
## 메모리(Memory)
- ### 데이터를 저장하는 장치(기억장치)
    - 프로그램(OS, 사용자SW 등), 사용자 데이터 등
- ### 메모리의 종류
  - 레지스터, 캐시, 메인 메모리, 보조기억장치<BR>좌측으로 갈수록 저용량 고속/고가, 우측은 그 반대
# ![NULL!](./메모리의종류.png)
## 메모리의 종류
- ### 주기억장치
  - 프로세서가 수행할 프로그램과 데이터 저장
  - DRAM을 주로 사용
    - 용량이 크고, 가격이 저렴
  - 디스크 입출력 병목현상(I/O Bottleneck) 해소
  - Disk Speed << CPU Speed
  - ROM/RAM
  
- ### 캐시
  - 프로세서 내부에 있는 메모리(L1, L2 캐시 등)
    - 속도가 빠르고, 가격이 비쌈
  - 메인 메모리의 입출력 병목현상 해소
## 캐시의 동작
  - 일반적으로 HW적으로 관리됨
  - 캐시 히트(Cache hit)
    - 필요한 데이터 블록이 캐시 존재
    - 캐시 미스
      - 필요한 데이터 블록이 없는 경우
## 캐시의 지역성(Locality)
- ### 공간적 지역성
  - 참조한 주소와 인접한 주소를 참조하는 특성
    - 예) 순차적 프로그램 수행
- ### 시간적 지역성
  - 한번 참조한 주소를 곧 다시 참조하는 특성
    - 예) FOR 문 등의 순환문
- ### 지역성은 캐시 적중률(Cache hit ratop)와 밀접
  - 알고리즘 성능 향상 위한 중요한 요소 중 하나 
## 메모리의 종류
- ### 보조기억 장치
  - 프로그램과 데이터를 저장
  - 프로세서가 직접 접근할 수 없음
    - 주기억장치를 거쳐서 접근
    - (프로그램/데이터 > 주기억장)인 경우는?
      - 가상 메모리(Virtual memory)
  - 용량이 크고, 가격이 저렴
## 메모리와 운영체제
- ### 메모리 할당 및 관리
  - 프로그램의 요청에 따른 메모리 할당 및 회수
  - 할당된 메모리 관리
- ### 가상 메모리 관리
  - 가상 메모리 생성 및 관리
=======
---
layout: post
title: "운영체제"
date:   2022-03-28 14:49:24 +0900
categories: 운영체제
---

# LECTURE 1
# 컴퓨터 시스템 개요

## 컴퓨터 하드웨어
1. 프로세서
    - CPU
    - 그래픽카드(GPU) 등
2. 메모리
    - 주기억장치
    - 보조기억장치
3. 주변장치
    - 키보드/마우스
    - 모니터/프린터
    - 네트워크 모뎀 등
## 프로세서
- ### 컴퓨터의 두뇌
    - 연산 수행
    - 컴퓨터의 모든 장치의 동작 제어
> ### 프로세서
> (레지스터 <-> Processing Unit)<-Control Unit
## 레지스터
- ### 프로세서 내부에 있는 메모리
    - 프로세서가 사용할 데이터 저장
    - 컴퓨터에서 가장 빠른 메모리
- ### 레지스터의 종류
    - 용도에 따른 분류
        - 전용 레지스터, 범용 레지스터
    - 사용자가 정보 변경 가능 여부에 따른 분류
        - 사용자 가시 레지스터, 사용자 불가시 레지스터
    - 저장하는 정보의 종류에 따른 분류
        - 데이터 레지스터, 주소 레지스터, 상태 레지스터
  
#### 표 1-1 사용자 가시 레지스터
종류  | 설명 
---------|----------
 데이터 레지스터(DR) | 함수 연산에 필요한 데이터를 저장한다. 값, 문자 등을 저장하므로 산술 연산이나 논리 연산에 사용하며, 연산 결과로 플래그 값을 저장한다. 
 주소 레지스터(AR) | 주소나 유효 주소를 계산하는 데에 필요한 주소 일부분을 저장한다. 주소 레지스터에 저장한 값(값 데이터)을 사용하여 산술 연산을 할 수 있다.<br>cf) 기준 주소 레지스터, 인덱스 레지스터, 스택 포인터 레지스터
 #### 표 1-2 사용자 불가시 레지스터

종류 | 설명 
---------|----------
 프로그램 카운터(PC) | 다음에 실행할 명령어의 주소를 보관하는 레지스터이다. 계수기로 되어 있어 실행할 명령어를 메모리에서 읽으면 명령어의 길이만큼 증가하여 다음 명령어를 가리키며, 분기 명령어는 목적 주소로 갱신할 수 있다
 명령어 레지스터 | 현재 실행하는 명령어를 보관하는 레지스터이다 
 누산기(ACC) | 데이터를 일시적으로 저장하는 레지스터이다
 메모리 주소 레지스터(MAR) | 프로세서가 참조하려는 데이터의 주소를 명시하여 메모리에 접근하는 버퍼 레지스터이다
 메모리 버퍼 레지스터 | 프로세서가 메모리에서 읽거나 메모리에서 저장할 데이터 자체를 보관하는 버퍼 레지스터이다. 메모리 데이터 레지스터(MDR)이라고도 한다.
 ## 프로세서의 동작
 ![Null!](./프로세스의동작.png)
## 운영체제와 프로세서
- ### 프로세서에게 처리할 작업 할당 및 관리
  - 프로세스(process) 생성 및 관리
- ### 프로그램의 프로세서 사용 제어
  - 프로그램의 프로세서 사용 시간 관리
  - 복수 프로그램간 사용 시간 조율
## 메모리(Memory)
- ### 데이터를 저장하는 장치(기억장치)
    - 프로그램(OS, 사용자SW 등), 사용자 데이터 등
- ### 메모리의 종류
  - 레지스터, 캐시, 메인 메모리, 보조기억장치<BR>좌측으로 갈수록 저용량 고속/고가, 우측은 그 반대
# ![NULL!](./메모리의종류.png)
## 메모리의 종류
- ### 주기억장치
  - 프로세서가 수행할 프로그램과 데이터 저장
  - DRAM을 주로 사용
    - 용량이 크고, 가격이 저렴
  - 디스크 입출력 병목현상(I/O Bottleneck) 해소
  - Disk Speed << CPU Speed
  - ROM/RAM
  
- ### 캐시
  - 프로세서 내부에 있는 메모리(L1, L2 캐시 등)
    - 속도가 빠르고, 가격이 비쌈
  - 메인 메모리의 입출력 병목현상 해소
## 캐시의 동작
  - 일반적으로 HW적으로 관리됨
  - 캐시 히트(Cache hit)
    - 필요한 데이터 블록이 캐시 존재
    - 캐시 미스
      - 필요한 데이터 블록이 없는 경우
## 캐시의 지역성(Locality)
- ### 공간적 지역성
  - 참조한 주소와 인접한 주소를 참조하는 특성
    - 예) 순차적 프로그램 수행
- ### 시간적 지역성
  - 한번 참조한 주소를 곧 다시 참조하는 특성
    - 예) FOR 문 등의 순환문
- ### 지역성은 캐시 적중률(Cache hit ratop)와 밀접
  - 알고리즘 성능 향상 위한 중요한 요소 중 하나 
## 메모리의 종류
- ### 보조기억 장치
  - 프로그램과 데이터를 저장
  - 프로세서가 직접 접근할 수 없음
    - 주기억장치를 거쳐서 접근
    - (프로그램/데이터 > 주기억장)인 경우는?
      - 가상 메모리(Virtual memory)
  - 용량이 크고, 가격이 저렴
## 메모리와 운영체제
- ### 메모리 할당 및 관리
  - 프로그램의 요청에 따른 메모리 할당 및 회수
  - 할당된 메모리 관리
- ### 가상 메모리 관리
  - 가상 메모리 생성 및 관리
>>>>>>> e9fa99f1f2af58f2e1fcd9d634a346e9ed5cabc8
  - 논리주소 -> 물리주소 변환