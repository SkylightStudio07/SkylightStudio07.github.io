<<<<<<< HEAD
---
layout: post
title:  "프밍중간정리"
date:   2022-04-11 14:49:24 +0900
categories: 프로그래밍언어론
---
## 인류 최초의 프로그래머
에이다 러브레이스 백작부인이며, 찰스 배비지가 만든 해석기관에서 작동할 수 있는 첫번째 프로그램(베르누이 수를 구하는 알고리즘)을 구현했다.

## 직교성
직교성을 사용하면 많은 양의 primitive feature을 더 적은 수의 primitve feature로 압축할 수 있다

## fetch-execute-cycle

1. pc가 가리키고 있는 명령을 가져온다
2. 다음 명령을 가리키기 위해 pc를 증가시키니다.
3. 명령을 해석한다..
4. 명령을 수행한다.

## 프로그래밍 방법론에 미친 영향

- 1950년대에서 1960년대 초기
  - 간단한 프로그램들이 주를 이뤘기에 기계 성능에 크게 연연 x
- 1960년대 중반
  - 구조화된 프로그래밍+top-down 방식
- 1970년대 후기
  - process oriented 프로그래밍이 data-oriented 진화
  - 데이터 추상화 등장
- 1980년대 중반
  - 객체 지향 프로그래밍

## 언어 종류

- 명령형
  - 변수 등등
  - 비주얼 언어 포함
  - 스크립트 언어 포함
  - 객체 지향 프로그래밍을 지원하는 언어 포함
  - 변수, 대입문, 반복문 포함
  - C언어, 자바, 자바스크립트, 닷넷, 비주얼 베이직
- 논리형
  - 논리 문장을 이용하여 프로그램을 표현하고 계산을 수행
  - Prolog
- 함수형
  - 매개변수에 함수를 적용하는 방식
  - LISP, SCHEME
- 마크업/하이브리드
    - 약간의 프로그래밍을 지원하도록 하는 마크업 언어
    - JSLT, XSTL
## TRADEOFF
- 안정성 VS 실행 비용
- 가독성 VS 작성력
- 작성력 VS 안정성

## 구현 방식
1. 컴파일 방식
   - 모든 소스코드를 한꺼번에 기계어로 번역
   - c, c++, ada, 코볼
2. Pure Interpretation
   - 한줄씩 인터프리팅됨
   - php, js
3. Hybrid
   - 컴파일러와 인터프리터 둘다 사용

## 컴파일 방식
1. lexical analyzer
2. Syntax analyzer
3. semantic analyzer and intermediate code generator

=======
---
layout: post
title:  "프밍중간정리"
date:   2022-04-11 14:49:24 +0900
categories: 프로그래밍언어론
---
## 인류 최초의 프로그래머
에이다 러브레이스 백작부인이며, 찰스 배비지가 만든 해석기관에서 작동할 수 있는 첫번째 프로그램(베르누이 수를 구하는 알고리즘)을 구현했다.

## 직교성
직교성을 사용하면 많은 양의 primitive feature을 더 적은 수의 primitve feature로 압축할 수 있다

## fetch-execute-cycle

1. pc가 가리키고 있는 명령을 가져온다
2. 다음 명령을 가리키기 위해 pc를 증가시키니다.
3. 명령을 해석한다..
4. 명령을 수행한다.

## 프로그래밍 방법론에 미친 영향

- 1950년대에서 1960년대 초기
  - 간단한 프로그램들이 주를 이뤘기에 기계 성능에 크게 연연 x
- 1960년대 중반
  - 구조화된 프로그래밍+top-down 방식
- 1970년대 후기
  - process oriented 프로그래밍이 data-oriented 진화
  - 데이터 추상화 등장
- 1980년대 중반
  - 객체 지향 프로그래밍

## 언어 종류

- 명령형
  - 변수 등등
  - 비주얼 언어 포함
  - 스크립트 언어 포함
  - 객체 지향 프로그래밍을 지원하는 언어 포함
  - 변수, 대입문, 반복문 포함
  - C언어, 자바, 자바스크립트, 닷넷, 비주얼 베이직
- 논리형
  - 논리 문장을 이용하여 프로그램을 표현하고 계산을 수행
  - Prolog
- 함수형
  - 매개변수에 함수를 적용하는 방식
  - LISP, SCHEME
- 마크업/하이브리드
    - 약간의 프로그래밍을 지원하도록 하는 마크업 언어
    - JSLT, XSTL
## TRADEOFF
- 안정성 VS 실행 비용
- 가독성 VS 작성력
- 작성력 VS 안정성

## 구현 방식
1. 컴파일 방식
   - 모든 소스코드를 한꺼번에 기계어로 번역
   - c, c++, ada, 코볼
2. Pure Interpretation
   - 한줄씩 인터프리팅됨
   - php, js
3. Hybrid
   - 컴파일러와 인터프리터 둘다 사용

## 컴파일 방식
1. lexical analyzer
2. Syntax analyzer
3. semantic analyzer and intermediate code generator

>>>>>>> e9fa99f1f2af58f2e1fcd9d634a346e9ed5cabc8
소스 프로그램의 문자를 어휘로 변환하고, 그 어휘를 구문 분석 트리로 변환시키고, 중간 코드 생성기로 hll이 어셈블리어로 변환되며, 코드 제네레이터로 어셈블리어가 기계어로 번역