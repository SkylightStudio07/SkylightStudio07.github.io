---
layout: post
title:  "가독성 테스트"
date:   2022-04-03 14:49:24 +0900
categories: 데이터베이스
---
# 01 데이터베이스 개요
## 문제 1
### 데이터
- 현실 세계에서 단순한 관찰이나 측정을 통해서 수집된 사실 또는 값
### 정보
- 데이터가 어떤 목적에 의해 해석되거나 가공된 형태
### 데이터베이스
- 어느 한 조직이 운영하는 응용 프로그램들이 공동으로 사용하는 데이터를 통합해서 저장한 운영 데이터의 집합
## 문제 2 데이터베이스 정의에 함축된 네 가지 개념
1. 공용 데이터
- 하나의 응용만을 위한 데이터가 아닌, 조직의 여러 가지 응용 프로그램들이 공동으로 운용하는 데이터
2. 통합된 데이터
- 한 곳에서 모아서 공동으로 관리함. 중복을 최소화함으로써 저장공간 절약 가능. 어쩔 수 없이 중복 발생시 최소한의 중복
3. 저장된 데이터
- 컴퓨터가 접근 가능한 디스크와 같은 저장소에 저장됨. 직접 호출이 가능한 데이터
4. 운영 데이터
- 어떤 조직을 운영하는 데에 기본적으로 필요한 데이터를 저장한 것. 1회 출입자 명단이나 회사홈페이지방문자명단은 x
## 문제 3
- 데이터가 통합되면 원칙적으로 데이터가 중복되지 아니하지만, 검색의 효율성을 고려해 최소한의 일부 데이터 중복을 허용
## 문제 4
1. 동시 공용
- 데이터베이스의 데이터를 동시에 사용해도 일관성을 유지할 수 있도록 관리하는 것이 매우 중요
2. DBMS
- 데이터베이스를 효율적으로 관리하기 위해 데이터베이스관리시스템이 이용됨
3. 내용에 의한 참조
- 저장된 주소나 위치가 아닌 데이터의 내용을, 즉 값에 의해 참조 가능
4. 지속적인 변화
- 삽입, 삭제, 갱신 등을 통해 지속적으로 변화하여 현재의 정확한 데이터를 유지해야 함
5. 실시간 접근성
- 언제든지 필요한 시점에 접근이 가능해야 함
## 문제 5
1. 개체
- 존재하면서 서로 구별될 수 있는 요소
2. 속성
- 이름을 가진 정보의 가장 작은 논리 단위
3. 관계
- 개체들 간의 의미있는 연결 또는 연관성
---
# 02 데이터베이스 관리 시스템 개요
## 문제 1
- 데이터베이스의 궁극적인 목적은 응용 프로그램이 데이터에 종속되지 않는 데이터 독립성을 제공하는 것
## 문제 2 파일 시스템 문제점
1. 일관성 유지가 어려움
- 데이터의 중복으로 인해 데이터의 동일성을 유지하기가 어려움
2. 보안 유지가 어려움
- 응용 프로그램별로 데이터를 중복해서 관리하게 되므로 모든 데이터에 대한 동일한 수준의 보안 유지가 어려움
3. 경제성 저하
- 중복된 저장과 갱신 작업으로 인해 저장 공간 뿐만아니라 갱신 비용도 높아짐
4. 데이터 무결성 유지가 어려움
- 중복하여 데이터를 관리하게 되므로 데이터 무결성 유지가 어려워짐
5. 동시 공용이 어려움
- 드물게 한 데이터를 다른 응용프로그램들이 공동으로 사용한다 해도, 어떤 한 프로그램이 데이터를 사용하고 있으면 다른 프로그램은 사용할 수 없음
## 문제 3 DBMS 필수 기능
1. 데이터 정의 기능
- 정의 기능은 데이터 형태와 구조, 그리고 DB 저장에 관한 내용을 정의하는 것을 포함하며, 다양한 응용 프로그램과 DB가 서로 인터페이스할 수 있는 수단을 제공하게 된다.
  - 1) DB의 논리적인 구조를 기술할 수 있어야 함
  - 2) DB의 물리적인 구조를 기술할 수 있어야 함
  - 3) 물리적 구조와 논리적 구조 간의 변환이 가능하도록 사상에 대해 명세서를 기술 가능해야 함
### SQL 데이터 정의어
- CREATE TABLE - 데이터 구조 생성
- ALTER TABLE - 데이터 구조 변경
- CREATE INDEX - 데이터 접근을 위해 특정 속성에 인덱스 정의
- DROP TABLE 데이터 구조 삭제
2. 데이터 조작 기능
- 사용자의 요구에 따라 검색, 삽입, 삭제 등과 같은 DB 연산을 지원해야 하며, 다양한 사용자와 DB 간의 인터페이스를 제공하느 기능
### 데이터 조작어
- 데이터 검색 : SELECT
- 데이터 수정 : UPDATE
- 데이터 삭제 : DELETE
- 데이터 삽입 : INSERT
3. 데이터 제어 기능
- 공용으로 관리되는 DB 내용의 정확성과 안전성을 유지하는 기능. 하기 조건들을 만족해야 함.
  - 무결성 유지 기능
  - 보안 및 권한 검사 기능
  - 동시성 제어 기능
## 문제 4 DBMS 장단점
### 장점
1. 데이터 동시 공유
2. 데이터 중복 최성화
3. 데이터 무결성 유지
4. 데이터 일관성 유지
5. 프로그램과 데이터 간의 독립성 유지
6. 효율적인 데이터 보안 관리
7. 데이터 관리 표준화
8. 데이터 요구 조정 기능
### 단점
1. 초기 개발비 및 운영비 증가
2. 데이터 처리의 복잡성
3. 백업 및 복구의 복잡성
4. 시스템 장애에 대한 취약성
## 문제 3 ANSL/SPRAC 3단계 구조
### 1. 외부 단계
- 외부 단계는 DB에 관한 개별 사용자의 관점으로서, 각 사용자나 응용 프로그래머가 생각하는 개인적인 DB 구조를 의미한다.
### 2. 개념 단계
- 개념 단계는 DB에 관한 사용자 공동체의 관점, 즉 한 조직 전체를 위한 DB의 논리적 구조를 의미한다. 개념 단계에서 범기관적인 입장에서 전체 DB를 정의한 것을 개념 스키마로 칭한다. 개념 스키마는 단 하나만 존재할 수 있다.
### 3. 내부 단계
- 내부 단계는 DB에 관한 물리적 저장장치 관점, 즉 DB에 어떤 데이터가 어떻게 저장되는지를 표현하는 저장 구조를 의미한다. 실제로 저장된 내부 레코드의 형식이나 인덱스 유무, 저장 데이터 항목의 표현 방법 등을 포함한다. 내부 스키마도 단 하나.
### 4. 외부/개념 사상
- 외부 스키마와 개념 스키마간의 대응 관계, 응용 인터페이스
- 개념 스키마에 새로운 개체나 속성의 추가와 같은 변화가 발생해도 외부/개념 사상만 수정해주면 외부 스키마에 아무런 영향을 미치지 않게 된다. 따라서 응용 프로그램에 아무런 영향을 주지 않고도 개념 스키마를 변경할 수 있으므로 결과적으로 논리적인 데이터 독립성을 제공하게 되는 것이다.
### 5. 개념/내부 사상
- 개념 스키마와 내부 스키마 사이의 대응 관계, 저장 관계
- 각 개체의 속성들이 내부 필드와 어떻게 대응되는지를 정의하는 것으로, 만약 내부 스키마가 변경되는 경우라도 이 저장 인터페이스만 수정해주면 개념 스키마와 응용 프로그램에는 아무런 영향을 미치지 않게 되므로 물리적 데이터 독립성을 제공하게 되는 것이다.
## 문제 6
- 스키마란 데이터베이스의 구조, 즉 개체와 속성, 그리고 관계를 포함하는 논리적 정의와 제약조건을 기술한 것을 의미한다. 3단계 DB 구조의 각 단계에서 정의한 스키마를 각각 외부 스키마, 개념 스키마, 그리고 내부 스키마라고 칭한다.
## 문제 7 데이터 독립성
- DBMS의 궁극적인 목적은 응용 프로그램이 데이터에 종속되지 않는 데이터 독립성을 제공하는 것이다. 즉, DB의 논리적인 구조나 물리적인 구조가 변경되어도 응용 프로그램에 영향을 주지 않는 것을 의미한다.
### 1) 논리적 데이터 독립성
- 논리적 데이터 독립성이란 응용 프로그램에 영향을 주지 않고 DB의 논리적 구조(개념적 스키마)를 변경할 수 있는 것을 의미한다. 즉 DB에 새로운 데이터 항목이나 레코드를 추가해도, 현재 정의된 사용자의 관점이나 응용 프로그램은 영향을 받지 않는 것이다.
### 2) 물리적 데이터 독립성
- 응용 프로그램과 DB에 논리적 구조에 영향을 주지 않고 물리적 구조를 변경할 수 있는 것
# 03 데이터베이스 설계
## 문제 1 데이터베이스 구성요소
1. DB : 데이터 저장
2. DBMS : DB를 생성, 관리 ,조작함으로써 사용자와 DB를 연결
3. 데이터 언어 : DB 정의와 조작, 제어를 위한 DB 전용 언어이다.
4. DB 사용자 및 관리자 : 데이터 언어를 사용해서 DB에 접근하는 사람으로, 일반 사용자와 응용 프로그래머, DB 관리자로 구분
5. DB 컴퓨타 : 효율적인 DB 관리를 위해서 DB에 대한 연산을 전담하는 DB 관리 전용 컴퓨터
## 문제 2 PDML, NpDML
### 1. 절차적 데이터 조작어
- 무슨 데이터를 어떻게 접근해서 처리할 지
### 2. 비절차적 데이터 조작어
- 무슨 데이터를 원하는 지. 어떻게 접근할 지는 DBMS에게 맡김.
- 독자적이고 대화식으로 사용하는 고급 명령어 형태의 데이터 조작어는 질의어(DSL)
## 문제 3
1. 데이터베이스 설계 및 운영
- 스키마 정의, 개체 속성 관계 결정, DB 저장 구조 결정, 보안 정책, 백업 및 복구절차, 무결성 유지 관련 규칙 수립, 시스템 카탈로그(데이터 객체, 용도, 표현 형태 저장). DB 재구성
2. 행정 관리 밑 불만 해결
- 데이터 표현 및 표준 설정
3. DB 시스템 감시 및 성능 분석
- 시스템 자원 이용도, 병목현상, 장비 성능 감시 및 사용자 요구 변화와 추세 통게 분석
## 문제 4
- 연산 수행 절차
  - 사용자의 접근 요구를 접수한 후 분석, 접근 요구는 삽입 ,삭제, 갱신
  - 분석한 사용자 요구를 시스템이 이해할 수 있는 형태로 변환
  - 변환된 사용자 요구를 실행하기 위해 외부 스키마, 외부/개념 사상, 개념 스키마, 개념/내부 사상, 내부 스키마, 저장 구조 순으로 거치면서 접근
  - 필요한 연산을 실행
1. 질의어 처리기
- 사용자가 입력한 질의문을 처리함, 질의문을 파싱, 분석, 컴파일 한 후 DB에 접근할 수 있는 오브젝트 코드를 생성한 다음, 런타임 DB 처리기에 전달
2. DML 예비 컴파일러
- DML 예비 컴파일러는 호스트 언어로 작성된 응용 프로그램에 삽입된 DML 명령문을 추출한 다음 그 자리에 함수 호출문을 대체, 추출된 명령문은 DB에 접근하기 위한 오브젝트 코드로 컴파일 되도록 DML 컴파일러에게 전달하고, 함수 호출문으로 수정된 응용 프로그램은 호스트 언어의 컴파일러에게 전달.
3. DML 컴파일러
- DML 예비 컴파일러가 전달한 DML 명령문을 파시앟고 컴파일해서 오브젝트 코드로 변환. 그리고 이 오브젝트 코드는 호스트 언어 컴파일러에 의해 처리된 수정된 응용프로그램의 오브젝트 코드와 연결되어 런타임 DB 처리기에 전달됨. DML 컴파일러는 DML 처리기라고 함.
4. DDL 컴파일러
- DDL로 작성된 스키마를 내부 형태로 변환해서 시스템 카탈로그에 저장함, 이 시스템 카탈로그는 파일의 이ㅡㄻ과 크기 등 메타데이터를 모두 저장함.
5. 트랜잭션 관리자
- 무결성 제약조건 만족 검사, 권함 검사, 병행 제어 및 복구 작업
6. 런타임 데이터베이스 처리기
- 실행 시간에 DB에 대한 접근 관리
7. 저장 데이터 관리자