---
layout: post
title:  "운영체제 Lecture 3"
date:   2022-04-11 14:49:24 +0900
categories: 운영체제
---
## job vs process
- ### 작업 / 프로그램
  - 실행할 프로그램+데이터
  - 컴퓨터 시스템에 실행 요청 전의 데이터
- ### 프로세스
  - 실행을 위해 커널에 등록된 작업
  - 시스템 성능 향상을 위해서 커널이 관리
---
## 프로세스의 정의
- ### 실행중인 프로그램
  - 커널에 등록되고 커널의 관리하에 있는 작업
  - 각종 자원들을 요청하고 할당받을 수 있는 개체
  - 프로세스 관리 블록(PCB)을 할당받은 개체
  - 능동적인 개체
- ### Process Control Block
  - 커널 공간 내에 존재
  - 각 프로세스들에 대한 정보를 관리
---
## 프로세스의 종류
- ### 구분-역할
  - 시스템(커널) 프로세스
    - 모든 시스템 메모리와 프로세서의 명령에 엑세스할 수 있는 프로세스이다. 프로세스 실행 순서를 제어하거나 다른 사용자 및 커널 영역을 침범하지 못하도록 감시하고, 사용자 프로세스를 생성하는 기능을 한다.
  - 사용자 프로세스
    - 사용자 코드를 수행하는 프로세스이다.
- ### 구분-병행 수행 방법
  - 독립 프로세스
    - 다른 프로세스에 영향을 주지 않거나 받지 않으면서 수행하는 병행 프로세스
  - 협력 프로세스
---
## 자원(Resource)
- ### 커널에 관리 하에 프로세스에게 할당/반납되는 수동적 개체
- ### 자원의 분류
  - 하드웨어 자원
    - 프로세서, 메모리, 디스크, 모니터 등...
  - 소프트웨어 자원
---
## Process Control Block
- OS가 프로세스 관리에 필요한 정보 저장(각 프로세스들에 대한 상태정보 저장)
- 프로세스 생성시 생성됨
## PCB가 관리하는 정보
- PID
  - 프로세스 고유 식별번호
- 스케줄링 정보
  - 프로세스 우선순위 등과 같은 스케줄링 관련 정보들
- 프로세스 상태
  - 자원 할당, 요청 정보 등
- 메모리 관련 정보
  - page table, segment table 등
- 입출력 상태 정보
  - 할당받은 입출력 장치, 파일 등에 대한 정보 등
- 문맥 저장 영역(context save area)
  - 프로세스의 레지스터 상태를 저장하는 공간
- 계정 정보
  - 자원 사용 시간 등을 관리 
---
## Context switching
- Context
  - 프로그램에 관련된 정보들의 집합
  - context saving
    - 현재 프로세서의 register context를 저장하는 방법
---
인터럽트 발생->프로세스 중단->인터럽트 처리->발생 장소, 원인 파악, 서비스할 것인지 결정(인터럽트 핸들링)